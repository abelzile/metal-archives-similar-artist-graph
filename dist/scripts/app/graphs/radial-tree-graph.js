define(["jquery","underscore","app/utils/math-ext"],function($,_,MathExt){"use strict";function RadialTreeGraph(){this._radiusX=0,this._radiusY=0,this._rootX=0,this._rootY=0,this._width=0,this._height=0}return Object.defineProperties(RadialTreeGraph.prototype,{radiusX:{get:function(){return this._radiusX},set:function(val){this._radiusX=val},enumerable:!0},radiusY:{get:function(){return this._radiusY},set:function(val){this._radiusY=val},enumerable:!0},rootX:{get:function(){return this._rootX},set:function(val){this._rootX=val},enumerable:!0},rootY:{get:function(){return this._rootY},set:function(val){this._rootY=val},enumerable:!0},width:{get:function(){return this._width},set:function(val){this._width=val},enumerable:!0},height:{get:function(){return this._height},set:function(val){this._height=val},enumerable:!0}}),RadialTreeGraph.prototype.run=function(tree,width,height){var depth=tree.depth,w=this.width;this.width===this.rootX&&this.rootX===this.radiusX&&0===this.rootX&&(w=width),0!==w&&(this.rootX=w/2,this.radiusX=this.rootX/depth);var h=this.height;this.height===this.rootY&&this.rootY===this.radiusY&&0===this.rootY&&(h=height),0!==h&&(this.rootY=h/2,this.radiusY=this.rootY/depth),this.layoutTree(tree)},RadialTreeGraph.prototype.layoutTree=function(node){node.angle=0,node.x=this.rootX,node.y=this.rootY,node.rightBisector=0,node.rightTangent=0,node.leftBisector=MathExt.TWO_PI,node.leftTangent=MathExt.TWO_PI,this.layoutTreeN(1,[node])},RadialTreeGraph.prototype.layoutTreeN=function(level,nodes){var prevAngle=0,firstParent=null,prevParent=null,parentNodes=[];if(_.forEach(nodes,function(parent){var children=parent.children,rightLimit=parent.rightLimit,angleSpace=(parent.leftLimit-rightLimit)/children.length;_.forEach(children,function(node,i){if(node.angle=rightLimit+(i+.5)*angleSpace,node.x=this.rootX+level*this.radiusX*Math.cos(node.angle),node.y=this.rootY+level*this.radiusY*Math.sin(node.angle),node.hasChildren){parentNodes.push(node),null===firstParent&&(firstParent=node);var prevGap=node.angle-prevAngle;node.rightBisector=node.angle-prevGap/2,null!==prevParent&&(prevParent.leftBisector=node.rightBisector);var arcAngle=level/(level+1),arc=2*Math.asin(arcAngle);node.leftTangent=node.angle+arc,node.rightTangent=node.angle-arc,prevAngle=node.angle,prevParent=node}},this)},this),null!==firstParent){var remainingAngle=MathExt.TWO_PI-prevParent.angle;firstParent.rightBisector=(firstParent.angle-remainingAngle)/2,prevParent.leftBisector=firstParent.rightBisector<0?firstParent.rightBisector+MathExt.TWO_PI+MathExt.TWO_PI:firstParent.rightBisector+MathExt.TWO_PI}parentNodes.length>0&&this.layoutTreeN(level+1,parentNodes)},RadialTreeGraph});